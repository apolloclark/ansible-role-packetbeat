#jinja2: trim_blocks: "true", lstrip_blocks: "true"
################### Packetbeat Configuration Example ##########################

# This file contains an overview of various configuration settings. Please consult
# the docs at https://www.elastic.co/guide/en/beats/packetbeat/6.3/packetbeat-configuration.html
# for more details.

# The Packetbeat shipper works by sniffing the network traffic between your
# application components. It inserts meta-data about each transaction into
# Elasticsearch.

#============================== Network device ================================
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-interfaces.html
#
packetbeat.interfaces:

  # Select the network interfaces to sniff the data. You can use the "any"
  # keyword to sniff on all connected interfaces.
  device: "{{ packetbeat_combined.interfaces.device }}"

  {% if 'type' in packetbeat_combined.interfaces and
         packetbeat_combined.interfaces.type %}
  # Packetbeat supports three sniffer types:
  # - pcap, which uses the libpcap library and works on most platforms, but it’s
  #   not the fastest option.
  # - af_packet, which uses memory-mapped sniffing. This option is faster than
  #   libpcap and doesn’t require a kernel module, but it’s Linux-specific.
  # - pf_ring, which makes use of an ntop.org project. This setting provides
  #   the best sniffing speed, but it requires a kernel module, and it’s Linux-specific.
  # Note
  # The pf_ring option requires re-compilation of Packetbeat and is not
  # officially supported by Elastic at this moment. The default sniffer type is pcap.
  type: "{{ packetbeat_combined.interfaces.type }}"
  {% endif %}

  {% if 'snaplen' in packetbeat_combined.interfaces and
         packetbeat_combined.interfaces.snaplen %}
  # The maximum size of the packets to capture. The default is 65535, which is
  # large enough for almost all networks and interface types. If you sniff on a
  # physical network interface, the optimal setting is the MTU size. On virtual
  # interfaces, however, it’s safer to accept the default value.
  snaplen: {{ packetbeat_combined.interfaces.snaplen }}
  {% endif %}

  {% if 'buffer_size_mb' in packetbeat_combined.interfaces and
         packetbeat_combined.interfaces.buffer_size_mb %}
  # The maximum size of the shared memory buffer to use between the kernel and
  # user space. A bigger buffer usually results in lower CPU usage, but consumes
  # more memory. This setting is only available for the af_packet sniffer type.
  # The default is 30 MB.
  buffer_size_mb: {{ packetbeat_combined.interfaces.buffer_size_mb }}
  {% endif %}

  {% if 'with_vlans' in packetbeat_combined.interfaces and
         packetbeat_combined.interfaces.with_vlans%}
  # Packetbeat automatically generates a BPF for capturing only the traffic on
  # ports where it expects to find known protocols. For example, if you have
  # configured port 80 for HTTP and port 3306 for MySQL, Packetbeat generates
  # the following BPF filter: "port 80 or port 3306".
  #
  # However, if the traffic contains VLAN tags, the filter that Packetbeat
  # generates is ineffective because the offset is moved by four bytes. To fix
  # this, you can enable the with_vlans option, which generates a BPF filter
  # that looks like this: "port 80 or port 3306 or (vlan and (port 80 or port 3306))".
  with_vlans: "{{ packetbeat_combined.interfaces.with_vlans }}"
  {% endif %}

  {% if 'bpf_filter' in packetbeat_combined.interfaces and
         packetbeat_combined.interfaces.bpf_filter %}
  # Packetbeat automatically generates a BPF for capturing only the traffic on
  # ports where it expects to find known protocols. For example, if you have
  # configured port 80 for HTTP and port 3306 for MySQL, Packetbeat generates
  # the following BPF filter: "port 80 or port 3306".
  bpf_filter: "{{ packetbeat_combined.interfaces.bpf_filter }}"
  {% endif %}

  {% if 'ignore_outgoing' in packetbeat_combined.interfaces %}
  # If the ignore_outgoing option is enabled, Packetbeat ignores all the
  # transactions initiated from the server running Packetbeat.
  #
  # This is useful when two Packetbeat instances publish the same transactions.
  # Because one Packetbeat sees the transaction in its outgoing queue and the
  # other sees it in its incoming queue, you can end up with duplicate
  # transactions. To remove the duplicates, you can enable the
  # packetbeat.ignore_outgoing option on one of the servers.
  ignore_outgoing: "{{ packetbeat_combined.interfaces.ignore_outgoing }}"
  {% endif %}



#================================== Flows =====================================

#packetbeat.flows:
  # Enable Network flows. Default: true
  #enabled: true

  # Set network flow timeout. Flow is killed if no packet is received before being
  # timed out.
  #timeout: 30s

  # Configure reporting period. If set to -1, only killed flows will be reported
  #period: 10s



#========================== Transaction protocols =============================
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-protocols.html
#
{% if 'protocols' in packetbeat_combined %}
packetbeat.protocols:

  {% if 'icmp' in packetbeat_combined.protocols %}
  #------------------------------------ ICMP -----------------------------------
  #
  # https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-protocols.html#_icmp_configuration_options
  - type: icmp
    {% if 'enabled' in packetbeat_combined.protocols.icmp %}
    # The ICMP protocol can be enabled/disabled via this option.
    # The default is true.
    #
    # If enabled Packetbeat will generate the following BPF filter: "icmp or icmp6".
    enabled:  {{ packetbeat_combined.protocols.icmp.enabled }}
    {% endif %}
  {% endif %}

  {% if 'dns' in packetbeat_combined.protocols %}
  #------------------------------------- DNS -----------------------------------
  #
  # https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-protocols.html#_dns_configuration_options
  - type: dns

    {% if 'enabled' in packetbeat_combined.protocols.dns %}
    # The enabled setting is a boolean setting to enable or disable protocols
    # without having to comment out configuration sections. If set to false,
    # the protocol is disabled.
    #
    # The default value is true.
    enabled:  {{ packetbeat_combined.protocols.dns.enabled }}
    {% endif %}

    {% if 'ports' in packetbeat_combined.protocols.dns %}
    # Configure the ports where to listen for DNS traffic. You can disable
    # the DNS protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.dns.ports }}
    {% endif %}

    {% if 'send_request' in packetbeat_combined.protocols.dns %}
    # send_request and send_response control whether or not the stringified DNS
    # request and response message are added to the result.
    # Nearly all data about the request/response is available in the dns.*
    # fields, but this can be useful if you need visibility specifically
    # into the request or the response.
    # Default: false
    send_request:  {{ packetbeat_combined.protocols.dns.send_request }}
    {% endif %}

    {% if 'send_response' in packetbeat_combined.protocols.dns %}
    send_response: {{ packetbeat_combined.protocols.dns.send_response }}
    {% endif %}

    {% if 'include_authorities' in packetbeat_combined.protocols.dns %}
    # include_authorities controls whether or not the dns.authorities field
    # (authority resource records) is added to messages.
    # Default: false
    include_authorities: {{ packetbeat_combined.protocols.dns.include_authorities }}
    {% endif %}

    {% if 'include_additionals' in packetbeat_combined.protocols.dns %}
    # include_additionals controls whether or not the dns.additionals field
    # (additional resource records) is added to messages.
    # Default: false
    include_additionals: {{ packetbeat_combined.protocols.dns.include_additionals }}
    {% endif %}
  {% endif %}

  {% if 'http' in packetbeat_combined.protocols %}
  #--------------------------------- HTTP --------------------------------------
  #
  # https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-protocols.html#_http_configuration_options
  - type: http

    {% if 'enabled' in packetbeat_combined.protocols.http %}
    # The enabled setting is a boolean setting to enable or disable protocols
    # without having to comment out configuration sections. If set to false,
    # the protocol is disabled.
    #
    # The default value is true.
    enabled:  "{{ packetbeat_combined.protocols.http.enabled }}"
    {% endif %}

    {% if 'ports' in packetbeat_combined.protocols.http %}
    # Configure the ports where to listen for HTTP traffic. You can disable
    # the HTTP protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.http.ports }}
    {% endif %}

    {% if 'send_request' in packetbeat_combined.protocols.http %}
    # If this option is enabled, the raw message of the request (request field)
    # is sent to Elasticsearch. The default is false. This option is useful
    # when you want to index the whole request. The default value is false.
    #
    # Note that for HTTP, the body is not included by default, only the HTTP headers.
    send_request:  "{{ packetbeat_combined.protocols.http.send_request }}"
    {% endif %}

    {% if 'send_response' in packetbeat_combined.protocols.http %}
    # If this option is enabled, the raw message of the response (response
    # field) is sent to Elasticsearch. The default is false. This option is
    # useful when you want to index the whole response.
    #
    # Note that for HTTP, the body is not included by default, only the HTTP headers.
    send_response: "{{ packetbeat_combined.protocols.http.send_response }}"
    {% endif %}

    {% if 'hide_keywords' in packetbeat_combined.protocols.http %}
    # Uncomment the following to hide certain parameters in URL or forms attached
    # to HTTP requests. The names of the parameters are case insensitive.
    # The value of the parameters will be replaced with the 'xxxxx' string.
    # This is generally useful for avoiding storing user passwords or other
    # sensitive information.
    # Only query parameters and top level form parameters are replaced.
    hide_keywords: {{ packetbeat_combined.protocols.http.hide_keywords }}
    {% endif %}

    {% if 'redact_authorization' in packetbeat_combined.protocols.http %}
    # When this option is enabled, Packetbeat obscures the value of
    # Authorization and Proxy-Authorization HTTP headers, and censors those
    # strings in the response.
    #
    # You should set this option to true for transactions that use Basic
    # Authentication because they may contain the base64 unencrypted username
    # and password.
    redact_authorization: "{{ packetbeat_combined.protocols.http.redact_authorization }}"
    {% endif %}

    {% if 'send_headers' in packetbeat_combined.protocols.http %}
    # A list of header names to capture and send to Elasticsearch. These headers
    # are placed under the headers dictionary in the resulting JSON.
    send_headers: {{ packetbeat_combined.protocols.http.send_headers }}
    {% endif %}

    {% if 'send_all_headers' in packetbeat_combined.protocols.http %}
    # Instead of sending a white list of headers to Elasticsearch, you can
    # send all headers by setting this option to true. The default is false.
    send_all_headers: "{{ packetbeat_combined.protocols.http.send_all_headers }}"
    {% endif %}

    {% if 'include_body_for' in packetbeat_combined.protocols.http %}
    # The list of content types for which Packetbeat exports the full HTTP
    # payload. The HTTP body is available under http.request.body and
    # http.response.body for these Content-Types.
    #
    # In addition, if send_response option is enabled, then the HTTP body is
    # exported together with the HTTP headers under response and if
    # send_request enabled, then request contains the entire HTTP message
    # including the body.
    include_body_for: {{ packetbeat_combined.protocols.http.include_body_for }}
    {% endif %}

    {% if 'split_cookie' in packetbeat_combined.protocols.http %}
    # If the Cookie or Set-Cookie headers are sent, this option controls
    # whether they are split into individual values.
    # 
    # The default is false.
    split_cookie: "{{ packetbeat_combined.protocols.http.split_cookie }}"
    {% endif %}

    {% if 'real_ip_header' in packetbeat_combined.protocols.http %}
    # The header field to extract the real IP from. This setting is useful
    # when you want to capture traffic behind a reverse proxy, but you want
    # to get the geo-location information. If this header is present and
    # contains a valid IP addresses, the information is used for the
    # real_ip field.
    real_ip_header: "{{ packetbeat_combined.protocols.http.real_ip_header }}"
    {% endif %}

    {% if 'max_message_size' in packetbeat_combined.protocols.http %}
    # If an individual HTTP message is larger than this setting (in bytes),
    # it will be trimmed to this size. Unless this value is very small (<1.5K),
    # Packetbeat is able to still correctly follow the transaction and create
    # an event for it. The default is 10485760 (10 MB).
    max_message_size: {{ packetbeat_combined.protocols.http.max_message_size }}
    {% endif %}
  {% endif %}

  {% if 'memcache' in packetbeat_combined.protocols %}
  #------------------------------- Memcache ------------------------------------
  #
  # https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-protocols.html#_memcache_configuration_options
  - type: memcache

    # Configure the ports where to listen for memcache traffic. You can disable
    # the Memcache protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.memcache.ports }}

    # Uncomment the parseunknown option to force the memcache text protocol parser
    # to accept unknown commands.
    # Note: All unknown commands MUST not contain any data parts!
    # Default: false
    parseunknown: "{{ packetbeat_combined.protocols.memcache.parseunknown }}"

    # Update the maxvalue option to store the values - base64 encoded - in the
    # json output.
    # possible values:
    #    maxvalue: -1  # store all values (text based protocol multi-get)
    #    maxvalue: 0   # store no values at all
    #    maxvalue: N   # store up to N values
    # Default: 0
    maxvalues: {{ packetbeat_combined.protocols.memcache.maxvalues }}

    # Use maxbytespervalue to limit the number of bytes to be copied per value element.
    # Note: Values will be base64 encoded, so actual size in json document
    #       will be 4 times maxbytespervalue.
    # Default: unlimited
    maxbytespervalue: {{ packetbeat_combined.protocols.memcache.maxbytespervalue }}

    # UDP transaction timeout in milliseconds.
    # Note: Quiet messages in UDP binary protocol will get response only in error case.
    #       The memcached analyzer will wait for udptransactiontimeout milliseconds
    #       before publishing quiet messages. Non quiet messages or quiet requests with
    #       error response will not have to wait for the timeout.
    # Default: 200
    udptransactiontimeout: {{ packetbeat_combined.protocols.memcache.udptransactiontimeout }}
  {% endif %}

  {% if 'mysql' in packetbeat_combined.protocols %}
  - type: mysql
    # Configure the ports where to listen for MySQL traffic. You can disable
    # the MySQL protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.mysql.ports }}
  {% endif %}

  {% if 'pgsql' in packetbeat_combined.protocols %}
  - type: pgsql
    # Configure the ports where to listen for Pgsql traffic. You can disable
    # the Pgsql protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.pgsql.ports }}
  {% endif %}

  {% if 'redis' in packetbeat_combined.protocols %}
  - type: redis
    # Configure the ports where to listen for Redis traffic. You can disable
    # the Redis protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.redis.ports }}
  {% endif %}

  {% if 'thrift' in packetbeat_combined.protocols %}
  - type: thrift
    # Configure the ports where to listen for Thrift-RPC traffic. You can disable
    # the Thrift-RPC protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.thrift.ports }}
  {% endif %}

  {% if 'mongodb' in packetbeat_combined.protocols %}
  - type: mongodb
    # Configure the ports where to listen for MongoDB traffic. You can disable
    # the MongoDB protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.mongodb.ports }}
  {% endif %}
{% endif %}



{% if 'procs' in packetbeat_combined %}
#=========================== Monitored processes ==============================

# Configure the processes to be monitored and how to find them. If a process is
# monitored then Packetbeat attempts to use it's name to fill in the `proc` and
# `client_proc` fields.
# The processes can be found by searching their command line by a given string.
#
# Process matching is optional and can be enabled by uncommenting the following
# lines.
#
packetbeat.procs:
  
  {% if 'enabled' in packetbeat_combined.procs %}
  enabled: {{ packetbeat_combined.procs.enabled }}
  {% endif %}
  
  monitored:
    {% for program in packetbeat_combined.procs.monitored %}
    - process: {{ program.process }}
      cmdline_grep: {{ program.cmdline_grep }}
    {% endfor %}
# Uncomment the following if you want to ignore transactions created
# by the server on which the shipper is installed. This option is useful
# to remove duplicates if shippers are installed on multiple servers.
#packetbeat.ignore_outgoing: true
{% endif %}



########################### General ########################################
#
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-general.html
#
packetbeat:

  {% if 'name' in packetbeat_combined and
         packetbeat_combined.name %}
  # The name of the shipper that publishes the network data. It can be used to group
  # all the transactions sent by a single shipper in the web interface. Default
  # is the hostname.
  name: "{{ packetbeat_combined.name }}"
  {% endif %}

  {% if 'tags' in packetbeat_combined and
         packetbeat_combined.tags %}
  # The tags of the shipper are included in their own field with each
  # transaction published.
  tags: "{{ packetbeat_combined.tags }}"
  {% endif %}

  {% if 'fields' in packetbeat_combined and
         packetbeat_combined.fields %}
  # Optional fields that you can specify to add additional information to the
  # output.
  fields:
    {% for field in packetbeat_combined.fields %}
    {{ field }}
    {% endfor %}
  {% endif %}

  {% if 'fields_under_root' in packetbeat_combined %}
  # If this option is set to true, the custom fields are stored as top-level
  # fields in the output document instead of being grouped under a fields
  # sub-dictionary. If the custom field names conflict with other field names,
  # then the custom fields overwrite the other fields. The default value is false.
  fields_under_root: {{ packetbeat_combined.fields_under_root }}
  {% endif %}

  {% if 'queue_size' in packetbeat_combined and
         packetbeat_combined.queue_size %}
  # The internal queue size for single events in the processing pipeline. 
  # The default value is 1000.
  queue_size: {{ packetbeat_combined.queue_size }}
  {% endif %}

  {% if 'bulk_queue_size' in packetbeat_combined and
         packetbeat_combined.bulk_queue_size %}
  # (DO NOT TOUCH) The internal queue size for bulk events in the processing
  # pipeline. The default value is 0.
  bulk_queue_size: {{ packetbeat_combined.bulk_queue_size }}
  {% endif %}

  {% if 'max_procs' in packetbeat_combined and
         packetbeat_combined.max_procs %}
  # Sets the maximum number of CPUs that can be executing simultaneously. The
  # default is the number of logical CPUs available in the system.
  max_procs: {{ packetbeat_combined.max_procs }}
  {% endif %}



#================================ Processors ===================================

# Processors are used to reduce the number of fields in the exported event or to
# enhance the event with external metadata. This section defines a list of
# processors that are applied one by one and the first one receives the initial
# event:
#
#   event -> filter1 -> event1 -> filter2 ->event2 ...
#
# The supported processors are drop_fields, drop_event, include_fields, and
# add_cloud_metadata.
#
# For example, you can use the following processors to keep the fields that
# contain CPU load percentages, but remove the fields that contain CPU ticks
# values:
#
#processors:
#- include_fields:
#    fields: ["cpu"]
#- drop_fields:
#    fields: ["cpu.user", "cpu.system"]
#
# The following example drops the events that have the HTTP response code 200:
#
#processors:
#- drop_event:
#    when:
#       equals:
#           http.code: 200
#
# The following example renames the field a to b:
#
#processors:
#- rename:
#    fields:
#       - from: "a"
#         to: "b"
#
# The following example enriches each event with metadata from the cloud
# provider about the host machine. It works on EC2, GCE, DigitalOcean,
# Tencent Cloud, and Alibaba Cloud.
#
#processors:
#- add_cloud_metadata: ~
#
# The following example enriches each event with the machine's local time zone
# offset from UTC.
#
#processors:
#- add_locale:
#    format: offset
#
# The following example enriches each event with docker metadata, it matches
# given fields to an existing container id and adds info from that container:
#
#processors:
#- add_docker_metadata:
#    host: "unix:///var/run/docker.sock"
#    match_fields: ["system.process.cgroup.id"]
#    match_pids: ["process.pid", "process.ppid"]
#    match_source: true
#    match_source_index: 4
#    match_short_id: false
#    cleanup_timeout: 60
#    # To connect to Docker over TLS you must specify a client and CA certificate.
#    #ssl:
#    #  certificate_authority: "/etc/pki/root/ca.pem"
#    #  certificate:           "/etc/pki/client/cert.pem"
#    #  key:                   "/etc/pki/client/cert.key"
#
# The following example enriches each event with docker metadata, it matches
# container id from log path available in `source` field (by default it expects
# it to be /var/lib/docker/containers/*/*.log).
#
#processors:
#- add_docker_metadata: ~
#- add_host_metadata: ~



#============================= Elastic Cloud ==================================

# These settings simplify using packetbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:



#================================ Outputs ======================================
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuring-output.html
#
# Configure what output to use when sending the data collected by the beat.

{% if 'elasticsearch' in packetbeat_combined.output and 
       packetbeat_combined.output.elasticsearch %}
#-------------------------- Elasticsearch output -------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/elasticsearch-output.html
#
output.elasticsearch:
  
  {% if 'enabled' in packetbeat_combined.output.elasticsearch %}
  # Boolean flag to enable or disable the output module.
  enabled: {{ packetbeat_combined.output.elasticsearch.enabled }}
  {% endif %}

  {% if 'hosts' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.hosts %}
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify and additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  hosts:
  {% for item in packetbeat_combined.output.elasticsearch.hosts %}
    - {{ item }}
  {% endfor %}
  {% endif %}

  {% if 'compression_level' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.compression_level %}
  # Set gzip compression level.
  compression_level: {{ packetbeat_combined.output.elasticsearch.compression_level }}
  {% endif %}

  {% if 'protocol' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.protocol %}
  # Optional protocol and basic auth credentials.
  protocol: "{{ packetbeat_combined.output.elasticsearch.protocol }}"
  {% endif %}

  {% if 'username' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.username %}
  username: "{{ packetbeat_combined.output.elasticsearch.username }}"
  {% endif %}

  {% if 'password' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.password %}
  password: "{{ packetbeat_combined.output.elasticsearch.password }}"
  {% endif %}

  {% if 'parameters' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.parameters %}
  # Dictionary of HTTP parameters to pass within the url with index operations.
  parameters:
    - param1: value1
  {% endif %}

  {% if 'worker' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.worker %}
  # Number of workers per Elasticsearch host.
  worker: {{ packetbeat_combined.output.elasticsearch.worker }}
  {% endif %}

  {% if 'index' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.index %}
  # Optional index name. The default is "beat-index-prefix" plus date
  # and generates [beat-index-prefix-]YYYY.MM.DD keys.
  # In case you modify this pattern you must update setup.template.name and setup.template.pattern accordingly.
  index: "{{ packetbeat_combined.output.elasticsearch.index }}"
  {% endif %}

  {% if 'indices' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.indices %}
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify and additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  indices:
  {% for item in packetbeat_combined.output.elasticsearch.indices %}
    - {{ item }}
  {% endfor %}
  {% endif %}

  {% if 'pipeline' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.pipeline %}
  # Optional ingest node pipeline. By default no pipeline will be used.
  pipeline: "{{ packetbeat_combined.output.elasticsearch.pipeline }}"
  {% endif %}

  {% if 'pipelines' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.pipelines %}
  # Optional ingest node pipeline. By default no pipeline will be used.
  pipelines: "{{ packetbeat_combined.output.elasticsearch.pipelines }}"
  {% endif %}

  {% if 'path' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.path %}
  # Optional HTTP Path
  path: "{{ packetbeat_combined.output.elasticsearch.path }}"
  {% endif %}

  {% if 'headers' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.headers %}
  # Custom HTTP headers to add to each request
  headers:
    - X-My-Header: Contents of the header
  {% endif %}

  {% if 'proxy_url' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.proxy_url %}
  # Proxy server url
  proxy_url: "{{ packetbeat_combined.output.elasticsearch.proxy_url }}"
  {% endif %}

  {% if 'max_retries' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.max_retries %}
  # The number of times a particular Elasticsearch index operation is attempted. If
  # the indexing operation doesn't succeed after this many retries, the events are
  # dropped. The default is 3.
  max_retries: {{ packetbeat_combined.output.elasticsearch.max_retries }}
  {% endif %}

  {% if 'bulk_max_size' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.bulk_max_size %}
  # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
  # The default is 50.
  bulk_max_size: {{ packetbeat_combined.output.elasticsearch.bulk_max_size }}
  {% endif %}

  {% if 'timeout' in packetbeat_combined.output.elasticsearch and
         packetbeat_combined.output.elasticsearch.timeout %}
  # Configure http request timeout before failing an request to Elasticsearch.
  timeout: {{ packetbeat_combined.output.elasticsearch.timeout }}
  {% endif %}

  {% if 'ssl' in packetbeat_combined.output.elasticsearch and 
         packetbeat_combined.output.elasticsearch.ssl %}
  # Use SSL settings for HTTPS.
  #ssl:
    #enabled: true

    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #verification_mode: full

    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # SSL configuration. By default is off.
    # List of root certificates for HTTPS server verifications
    #certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication
    #certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    #key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections
    #cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites
    #curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #renegotiation: never
  {% endif %}
{% endif %}

{% if 'logstash' in packetbeat_combined.output and 
       packetbeat_combined.output.logstash %}
#----------------------------- Logstash output ---------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/logstash-output.html
#
output.logstash:

  {% if 'enabled' in packetbeat_combined.output.logstash %}
  # Boolean flag to enable or disable the output module.
  enabled: {{ packetbeat_combined.output.logstash.enabled }}
  {% endif %}

  {% if 'hosts' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.hosts %}
  # The Logstash hosts
  hosts:
    {% for item in packetbeat_combined.output.logstash.hosts %}
    - {{ item }}
    {% endfor %}
  {% endif %}

  {% if 'worker' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.worker %}
  # Number of workers per Logstash host.
  worker: {{ packetbeat_combined.output.logstash.worker }}
  {% endif %}

  {% if 'compression_level' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.compression_level %}
  # Set gzip compression level.
  compression_level: {{ packetbeat_combined.output.logstash.compression_level }}
  {% endif %}

  {% if 'ttl' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.ttl %}
  # Optional maximum time to live for a connection to Logstash, after which the
  # connection will be re-established.  A value of `0s` (the default) will
  # disable this feature.
  #
  # Not yet supported for async connections (i.e. with the "pipelining" option set)
  ttl: "{{ packetbeat_combined.output.logstash.ttl }}"
  {% endif %}

  {% if 'loadbalance' in packetbeat_combined.output.logstash %}
  # Optional load balance the events between the Logstash hosts. Default is false.
  loadbalance: {{ packetbeat_combined.output.logstash.loadbalance }}
  {% endif %}

  {% if 'pipelining' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.pipelining %}
  # Number of batches to be sent asynchronously to Logstash while processing
  # new batches.
  pipelining: {{ packetbeat_combined.output.logstash.pipelining }}
  {% endif %}

  {% if 'slow_start' in packetbeat_combined.output.logstash %}
  # If enabled only a subset of events in a batch of events is transferred per
  # transaction.  The number of events to be sent increases up to `bulk_max_size`
  # if no error is encountered.
  slow_start: {{ packetbeat_combined.output.logstash.slow_start }}
  {% endif %}

  {% if 'backoff' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.hosts %}
  backoff:
    
    {% if 'init' in packetbeat_combined.output.logstash.backoff and
           packetbeat_combined.output.logstash.backoff.init %}
    # The number of seconds to wait before trying to reconnect to Logstash
    # after a network error. After waiting backoff.init seconds, the Beat
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    init: "{{ packetbeat_combined.output.logstash.backoff.init }}"
    {% endif %}

    {% if 'max' in packetbeat_combined.output.logstash.backoff and
           packetbeat_combined.output.logstash.backoff.max %}
    # The maximum number of seconds to wait before attempting to connect to
    # Logstash after a network error. The default is 60s.
    max: "{{ packetbeat_combined.output.logstash.backoff.max }}"
    {% endif %}
  {% endif %}

  {% if 'index' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.index %}
  # Optional index name. The default index name is set to packetbeat
  # in all lowercase.
  index: "{{ packetbeat_combined.output.logstash.index }}"
  {% endif %}

  {% if 'proxy_url' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.proxy_url %}
  # SOCKS5 proxy server URL
  proxy_url: "{{ packetbeat_combined.output.logstash.proxy_url }}"
  {% endif %}

  {% if 'proxy_use_local_resolver' in packetbeat_combined.output.logstash %}
  # Resolve names locally when using a proxy server. Defaults to false.
  proxy_use_local_resolver: {{ packetbeat_combined.output.logstash.proxy_use_local_resolver }}
  {% endif %}

  {% if 'ssl' in packetbeat_combined.output.logstash and
         packetbeat_combined.output.logstash.ssl %}
  ssl:
    # Enable SSL support. SSL is automatically enabled, if any SSL setting is set.
    #enabled: true

    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # Optional SSL configuration options. SSL is off by default.
    # List of root certificates for HTTPS server verifications
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication
    #ssl.certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #ssl.key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    #ssl.key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections
    #ssl.cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites
    #ssl.curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never
  {% endif %}
{% endif %}

{% if 'kafka' in packetbeat_combined.output and 
       packetbeat_combined.output.kafka %}
#------------------------------- Kafka output ----------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/kafka-output.html
#
#output.kafka:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # The list of Kafka broker addresses from where to fetch the cluster metadata.
  # The cluster metadata contain the actual Kafka brokers events are published
  # to.
  #hosts: ["localhost:9092"]

  # The Kafka topic used for produced events. The setting can be a format string
  # using any event field. To set the topic from document type use `%{[type]}`.
  #topic: beats

  # The Kafka event key setting. Use format string to create unique event key.
  # By default no event key will be generated.
  #key: ''

  # The Kafka event partitioning strategy. Default hashing strategy is `hash`
  # using the `output.kafka.key` setting or randomly distributes events if
  # `output.kafka.key` is not configured.
  #partition.hash:
    # If enabled, events will only be published to partitions with reachable
    # leaders. Default is false.
    #reachable_only: false

    # Configure alternative event field names used to compute the hash value.
    # If empty `output.kafka.key` setting will be used.
    # Default value is empty list.
    #hash: []

  # Authentication details. Password is required if username is set.
  #username: ''
  #password: ''

  # Kafka version packetbeat is assumed to run against. Defaults to the oldest
  # supported stable version (currently version 0.8.2.0)
  #version: 0.8.2

  # Metadata update configuration. Metadata do contain leader information
  # deciding which broker to use when publishing.
  #metadata:
    # Max metadata request retry attempts when cluster is in middle of leader
    # election. Defaults to 3 retries.
    #retry.max: 3

    # Waiting time between retries during leader elections. Default is 250ms.
    #retry.backoff: 250ms

    # Refresh metadata interval. Defaults to every 10 minutes.
    #refresh_frequency: 10m

  # The number of concurrent load-balanced Kafka output workers.
  #worker: 1

  # The number of times to retry publishing an event after a publishing failure.
  # After the specified number of retries, the events are typically dropped.
  # Some Beats, such as packetbeat, ignore the max_retries setting and retry until
  # all events are published.  Set max_retries to a value less than 0 to retry
  # until all events are published. The default is 3.
  #max_retries: 3

  # The maximum number of events to bulk in a single Kafka request. The default
  # is 2048.
  #bulk_max_size: 2048

  # The number of seconds to wait for responses from the Kafka brokers before
  # timing out. The default is 30s.
  #timeout: 30s

  # The maximum duration a broker will wait for number of required ACKs. The
  # default is 10s.
  #broker_timeout: 10s

  # The number of messages buffered for each Kafka broker. The default is 256.
  #channel_buffer_size: 256

  # The keep-alive period for an active network connection. If 0s, keep-alives
  # are disabled. The default is 0 seconds.
  #keep_alive: 0

  # Sets the output compression codec. Must be one of none, snappy and gzip. The
  # default is gzip.
  #compression: gzip

  # The maximum permitted size of JSON-encoded messages. Bigger messages will be
  # dropped. The default value is 1000000 (bytes). This value should be equal to
  # or less than the broker's message.max.bytes.
  #max_message_bytes: 1000000

  # The ACK reliability level required from broker. 0=no response, 1=wait for
  # local commit, -1=wait for all replicas to commit. The default is 1.  Note:
  # If set to 0, no ACKs are returned by Kafka. Messages might be lost silently
  # on error.
  #required_acks: 1

  # The configurable ClientID used for logging, debugging, and auditing
  # purposes.  The default is "beats".
  #client_id: beats

  # Enable SSL support. SSL is automatically enabled, if any SSL setting is set.
  #ssl.enabled: true

  # Optional SSL configuration options. SSL is off by default.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Configure SSL verification mode. If `none` is configured, all server hosts
  # and certificates will be accepted. In this mode, SSL based connections are
  # susceptible to man-in-the-middle attacks. Use only for testing. Default is
  # `full`.
  #ssl.verification_mode: full

  # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
  # 1.2 are enabled.
  #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

  # Optional passphrase for decrypting the Certificate Key.
  #ssl.key_passphrase: ''

  # Configure cipher suites to be used for SSL connections
  #ssl.cipher_suites: []

  # Configure curve types for ECDHE based cipher suites
  #ssl.curve_types: []

  # Configure what types of renegotiation are supported. Valid options are
  # never, once, and freely. Default is never.
  #ssl.renegotiation: never
{% endif %}

{% if 'redis' in packetbeat_combined.output and 
       packetbeat_combined.output.redis %}
#------------------------------- Redis output ----------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/redis-output.html
#
#output.redis:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # The list of Redis servers to connect to. If load balancing is enabled, the
  # events are distributed to the servers in the list. If one server becomes
  # unreachable, the events are distributed to the reachable servers only.
  #hosts: ["localhost:6379"]

  # The Redis port to use if hosts does not contain a port number. The default
  # is 6379.
  #port: 6379

  # The name of the Redis list or channel the events are published to. The
  # default is packetbeat.
  #key: packetbeat

  # The password to authenticate with. The default is no authentication.
  #password:

  # The Redis database number where the events are published. The default is 0.
  #db: 0

  # The Redis data type to use for publishing events. If the data type is list,
  # the Redis RPUSH command is used. If the data type is channel, the Redis
  # PUBLISH command is used. The default value is list.
  #datatype: list

  # The number of workers to use for each host configured to publish events to
  # Redis. Use this setting along with the loadbalance option. For example, if
  # you have 2 hosts and 3 workers, in total 6 workers are started (3 for each
  # host).
  #worker: 1

  # If set to true and multiple hosts or workers are configured, the output
  # plugin load balances published events onto all Redis hosts. If set to false,
  # the output plugin sends all events to only one host (determined at random)
  # and will switch to another host if the currently selected one becomes
  # unreachable. The default value is true.
  #loadbalance: true

  # The Redis connection timeout in seconds. The default is 5 seconds.
  #timeout: 5s

  # The number of times to retry publishing an event after a publishing failure.
  # After the specified number of retries, the events are typically dropped.
  # Some Beats, such as packetbeat, ignore the max_retries setting and retry until
  # all events are published. Set max_retries to a value less than 0 to retry
  # until all events are published. The default is 3.
  #max_retries: 3

  # The maximum number of events to bulk in a single Redis request or pipeline.
  # The default is 2048.
  #bulk_max_size: 2048

  # The URL of the SOCKS5 proxy to use when connecting to the Redis servers. The
  # value must be a URL with a scheme of socks5://.
  #proxy_url:

  # This option determines whether Redis hostnames are resolved locally when
  # using a proxy. The default value is false, which means that name resolution
  # occurs on the proxy server.
  #proxy_use_local_resolver: false

  # Enable SSL support. SSL is automatically enabled, if any SSL setting is set.
  #ssl.enabled: true

  # Configure SSL verification mode. If `none` is configured, all server hosts
  # and certificates will be accepted. In this mode, SSL based connections are
  # susceptible to man-in-the-middle attacks. Use only for testing. Default is
  # `full`.
  #ssl.verification_mode: full

  # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
  # 1.2 are enabled.
  #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]

  # Optional SSL configuration options. SSL is off by default.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

  # Optional passphrase for decrypting the Certificate Key.
  #ssl.key_passphrase: ''

  # Configure cipher suites to be used for SSL connections
  #ssl.cipher_suites: []

  # Configure curve types for ECDHE based cipher suites
  #ssl.curve_types: []

  # Configure what types of renegotiation are supported. Valid options are
  # never, once, and freely. Default is never.
  #ssl.renegotiation: never
{% endif %}

{% if 'file' in packetbeat_combined.output and 
       packetbeat_combined.output.file %}
#------------------------------- File output -----------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/file-output.html
#
#output.file:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # Path to the directory where to save the generated files. The option is
  # mandatory.
  #path: "/tmp/packetbeat"

  # Name of the generated files. The default is `packetbeat` and it generates
  # files: `packetbeat`, `packetbeat.1`, `packetbeat.2`, etc.
  #filename: packetbeat

  # Maximum size in kilobytes of each file. When this size is reached, and on
  # every packetbeat restart, the files are rotated. The default value is 10240
  # kB.
  #rotate_every_kb: 10000

  # Maximum number of files under path. When this number of files is reached,
  # the oldest file is deleted and the rest are shifted from last to first. The
  # default is 7 files.
  #number_of_files: 7

  # Permissions to use for file creation. The default is 0600.
  #permissions: 0600
{% endif %}

{% if 'console' in packetbeat_combined.output and 
       packetbeat_combined.output.console %}
#----------------------------- Console output ---------------------------------
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/console-output.html
#
#output.console:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # Pretty print json event
  #pretty: false
{% endif %}



#================================= Paths ======================================

# The home path for the packetbeat installation. This is the default base path
# for all other path settings and for miscellaneous files that come with the
# distribution (for example, the sample dashboards).
# If not set by a CLI flag or in the configuration file, the default for the
# home path is the location of the binary.
#path.home:

# The configuration path for the packetbeat installation. This is the default
# base path for configuration files, including the main YAML configuration file
# and the Elasticsearch template file. If not set by a CLI flag or in the
# configuration file, the default for the configuration path is the home path.
#path.config: ${path.home}

# The data path for the packetbeat installation. This is the default base path
# for all the files in which packetbeat needs to store its data. If not set by a
# CLI flag or in the configuration file, the default for the data path is a data
# subdirectory inside the home path.
#path.data: ${path.home}/data

# The logs path for a packetbeat installation. This is the default location for
# the Beat's log files. If not set by a CLI flag or in the configuration file,
# the default for the logs path is a logs subdirectory inside the home path.
#path.logs: ${path.home}/logs



#================================ Keystore ==========================================
# Location of the Keystore containing the keys and their sensitive values.
#keystore.path: "${path.config}/beats.keystore"



{% if 'dashboards' in packetbeat_combined.setup and 
   packetbeat_combined.setup.dashboards %}
#============================== Dashboards =====================================
#
# https://www.elastic.co/guide/en/beats/packetbeat/6.3/configuration-dashboards.html
#
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards are disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag or the `setup` command.
setup.dashboards:

  {% if 'enabled' in packetbeat_combined.setup.dashboards %}
  enabled: {{ packetbeat_combined.setup.dashboards.enabled }}
  {% endif %}

  {% if 'directory' in packetbeat_combined.setup.dashboards and 
         packetbeat_combined.setup.dashboards.directory %}
  # The directory from where to read the dashboards. The default is the `kibana`
  # folder in the home path.
  directory: {{ packetbeat_combined.setup.dashboards.directory }}
  {% endif %}

  {% if 'url' in packetbeat_combined.setup.dashboards and 
         packetbeat_combined.setup.dashboards.url %}
  # The URL from where to download the dashboards archive. It is used instead of
  # the directory if it has a value.
  url: "{{ packetbeat_combined.setup.dashboards.url }}"
  {% endif %}

  {% if 'file' in packetbeat_combined.setup.dashboards and 
        packetbeat_combined.setup.dashboards.file %}
  # The  file archive (zip file) from where to read the dashboards. It is used instead
  # of the directory when it has a value.
  file: "{{ packetbeat_combined.setup.dashboards.file }}"
  {% endif %}

  {% if 'beat' in packetbeat_combined.setup.dashboards and 
      packetbeat_combined.setup.dashboards.beat %}
  # In case the archive contains the dashboards from multiple Beats, this lets you
  # select which one to load. You can load all the dashboards in the archive by
  # setting this to the empty string.
  beat: "{{ packetbeat_combined.setup.dashboards.beat }}"
  {% endif %}

  {% if 'kibana_index' in packetbeat_combined.setup.dashboards and 
         packetbeat_combined.setup.dashboards.kibana_index %}
  # The name of the Kibana index to use for setting the configuration. Default is ".kibana"
  kibana_index: "{{ packetbeat_combined.setup.dashboards.kibana_index }}"
  {% endif %}

  {% if 'index' in packetbeat_combined.setup.dashboards and 
         packetbeat_combined.setup.dashboards.index %}
  # The Elasticsearch index name. This overwrites the index name defined in the
  # dashboards and index pattern. Example: testbeat-*
  index: "{{ packetbeat_combined.setup.dashboards.index }}"
  {% endif %}

  {% if 'always_kibana' in packetbeat_combined.setup.dashboards %}
  # Always use the Kibana API for loading the dashboards instead of autodetecting
  # how to install the dashboards by first querying Elasticsearch.
  always_kibana: {{ packetbeat_combined.setup.dashboards.always_kibana }}
  {% endif %}
{% endif %}



#============================== Template =====================================

# A template is used to set the mapping in Elasticsearch
# By default template loading is enabled and the template is loaded.
# These settings can be adjusted to load your own template or overwrite existing ones.

#setup.template:

  # Set to false to disable template loading.
  #enabled: true

  # Template name. By default the template name is "packetbeat-%{[beat.version]}"
  # The template name and pattern has to be set in case the elasticsearch index pattern is modified.
  #name: "packetbeat-%{[beat.version]}"
  
  # Template pattern. By default the template pattern is "-%{[beat.version]}-*" to apply to the default index settings.
  # The first part is the version of the beat and then -* is used to match all daily indices.
  # The template name and pattern has to be set in case the elasticsearch index pattern is modified.
  #pattern: "packetbeat-%{[beat.version]}-*"
  
  # Path to fields.yml file to generate the template
  #fields: "${path.config}/fields.yml"
  
  # Overwrite existing template
  #overwrite: false
  
  # Elasticsearch template settings
  #settings:
  
    # A dictionary of settings to place into the settings.index dictionary
    # of the Elasticsearch template. For more details, please check
    # https://www.elastic.co/guide/en/elasticsearch/reference/6.3/mapping.html
    #index:
      #number_of_shards: 1
      #codec: best_compression
      #number_of_routing_shards: 30
  
    # A dictionary of settings for the _source field. For more details, please check
    # https://www.elastic.co/guide/en/elasticsearch/reference/6.3/mapping-source-field.html
    #_source:
      #enabled: false



{% if 'kibana' in packetbeat_combined.setup and 
   packetbeat_combined.setup.kibana %}
#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  {% if 'host' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.host %}
  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  host: "{{ packetbeat_combined.setup.kibana.host }}"
  {% endif %}

  {% if 'protocol' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.protocol %}
  # Optional protocol and basic auth credentials.
  protocol: "{{ packetbeat_combined.setup.kibana.protocol }}"
  {% endif %}

  {% if 'username' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.username %}
  username: "{{ packetbeat_combined.setup.kibana.username }}"
  {% endif %}

  {% if 'password' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.password %}
  password: "{{ packetbeat_combined.setup.kibana.password }}"
  {% endif %}

  {% if 'path' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.path %}
  # Optional HTTP Path
  path: "{{ packetbeat_combined.setup.kibana.path }}"
  {% endif %}

  {% if 'ssl' in packetbeat_combined.setup.kibana and 
         packetbeat_combined.setup.kibana.ssl %}
  # Use SSL settings for HTTPS. Default is true.
  #ssl:
    #enabled: true

    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # SSL configuration. By default is off.
    # List of root certificates for HTTPS server verifications
    #certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication
    #certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    #key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections
    #cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites
    #curve_types: []
  {% endif %}
{% endif %}



{% if 'logging' in packetbeat_combined and 
   packetbeat_combined.logging %}
#================================ Logging ======================================
# There are four options for the log output: file, stderr, syslog, eventlog
# The file output is the default.
logging:

  {% if 'level' in packetbeat_combined.logging and 
         packetbeat_combined.logging.level %}
  # Sets log level. The default log level is info.
  # Available log levels are: error, warning, info, debug
  level: "{{ packetbeat_combined.logging.level }}"
  {% endif %}

  {% if 'selectors' in packetbeat_combined.logging and 
         packetbeat_combined.logging.selectors %}
  # Enable debug output for selected components. To enable all selectors use ["*"]
  # Other available selectors are "beat", "publish", "service"
  # Multiple selectors can be chained.
  selectors: {{ packetbeat_combined.logging.selectors }}
  {% endif %}

  {% if 'to_syslog' in packetbeat_combined.logging %}
  # Send all logging output to syslog. The default is false.
  to_syslog: {{ packetbeat_combined.logging.to_syslog }}
  {% endif %}

  {% if 'to_eventlog' in packetbeat_combined.logging %}
  # Send all logging output to Windows Event Logs. The default is false.
  to_eventlog: {{ packetbeat_combined.logging.to_eventlog }}
  {% endif %}

  {% if 'metrics' in packetbeat_combined.logging and 
         packetbeat_combined.logging.metrics %}
  # If enabled, beatname periodically logs its internal metrics that have changed
  # in the last period. For each metric that changed, the delta from the value at
  # the beginning of the period is logged. Also, the total values for
  # all non-zero internal metrics are logged on shutdown. The default is true.
  metrics:

    {% if 'enabled' in packetbeat_combined.logging.metrics %}
    enabled: {{ packetbeat_combined.logging.metrics.enabled }}
    {% endif %}

    {% if 'period' in packetbeat_combined.logging.metrics and 
           packetbeat_combined.logging.metrics.period %}
    # The period after which to log the internal metrics. The default is 30s.
    period: {{ packetbeat_combined.logging.metrics.period }}
    {% endif %}
  {% endif %}
  
  {% if 'to_files' in packetbeat_combined.logging %}
  # Logging to rotating files. Set to_files to false to disable logging to
  # files.
  to_files: {{ packetbeat_combined.logging.to_files }}
  {% endif %}
  
  {% if 'files' in packetbeat_combined.logging and 
         packetbeat_combined.logging.files %}
  files:

    {% if 'path' in packetbeat_combined.logging.files and 
       packetbeat_combined.logging.files.path %}
    # Configure the path where the logs are written. The default is the logs directory
    # under the home path (the binary location).
    path: {{ packetbeat_combined.logging.files.path }}
    {% endif %}
  
    {% if 'name' in packetbeat_combined.logging.files and 
       packetbeat_combined.logging.files.name %}
    # The name of the files where the logs are written to.
    name: "{{ packetbeat_combined.logging.files.name }}"
    {% endif %}
  
    {% if 'rotateeverybytes' in packetbeat_combined.logging.files and 
       packetbeat_combined.logging.files.rotateeverybytes %}
    # Configure log file size limit. If limit is reached, log file will be
    # automatically rotated
    rotateeverybytes: {{ packetbeat_combined.logging.files.rotateeverybytes }}
    {% endif %}
  
    {% if 'keepfiles' in packetbeat_combined.logging.files and 
       packetbeat_combined.logging.files.keepfiles %}
    # Number of rotated log files to keep. Oldest files will be deleted first.
    keepfiles: {{ packetbeat_combined.logging.files.keepfiles }}
    {% endif %}
  
    {% if 'permissions' in packetbeat_combined.logging.files and 
       packetbeat_combined.logging.files.permissions %}
    # The permissions mask to apply when rotating log files. The default value is 0600.
    # Must be a valid Unix-style file permissions mask expressed in octal notation.
    permissions: {{ packetbeat_combined.logging.files.permissions }}
    {% endif %}
  {% endif %}

  {% if 'json' in packetbeat_combined.logging %}
  # Set to true to log messages in json format.
  json: {{ packetbeat_combined.logging.json }}
  {% endif %}
{% endif %}



#============================== Xpack Monitoring =====================================
# packetbeat can export internal metrics to a central Elasticsearch monitoring cluster.
# This requires xpack monitoring to be enabled in Elasticsearch.
# The reporting is disabled by default.

# Set to true to enable the monitoring reporter.
#xpack.monitoring.enabled: false

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well. Any setting that is not set is
# automatically inherited from the Elasticsearch output configuration, so if you
# have the Elasticsearch output configured, you can simply uncomment the
# following line, and leave the rest commented out.
#xpack.monitoring.elasticsearch:

  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify and additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  #hosts: ["localhost:9200"]

  # Set gzip compression level.
  #compression_level: 0

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "beats_system"
  #password: "changeme"

  # Dictionary of HTTP parameters to pass within the url with index operations.
  #parameters:
    #param1: value1
    #param2: value2

  # Custom HTTP headers to add to each request
  #headers:
  #  X-My-Header: Contents of the header

  # Proxy server url
  #proxy_url: http://proxy:3128

  # The number of times a particular Elasticsearch index operation is attempted. If
  # the indexing operation doesn't succeed after this many retries, the events are
  # dropped. The default is 3.
  #max_retries: 3

  # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
  # The default is 50.
  #bulk_max_size: 50

  # Configure http request timeout before failing an request to Elasticsearch.
  #timeout: 90

  # Use SSL settings for HTTPS.
  #ssl.enabled: true

  # Configure SSL verification mode. If `none` is configured, all server hosts
  # and certificates will be accepted. In this mode, SSL based connections are
  # susceptible to man-in-the-middle attacks. Use only for testing. Default is
  # `full`.
  #ssl.verification_mode: full

  # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
  # 1.2 are enabled.
  #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]

  # SSL configuration. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

  # Optional passphrase for decrypting the Certificate Key.
  #ssl.key_passphrase: ''

  # Configure cipher suites to be used for SSL connections
  #ssl.cipher_suites: []

  # Configure curve types for ECDHE based cipher suites
  #ssl.curve_types: []

  # Configure what types of renegotiation are supported. Valid options are
  # never, once, and freely. Default is never.
  #ssl.renegotiation: never



#================================ HTTP Endpoint ======================================
# Each beat can expose internal metrics through a HTTP endpoint. For security
# reasons the endpoint is disabled by default. This feature is currently experimental.
# Stats can be access through http://localhost:5066/stats . For pretty JSON output
# append ?pretty to the URL.

# Defines if the HTTP endpoint is enabled.
#http.enabled: false

# The HTTP endpoint will bind to this hostname or IP address. It is recommended to use only localhost.
#http.host: localhost

# Port on which the HTTP endpoint will bind. Default is 5066.
#http.port: 5066
