################### Packetbeat Configuration Example ##########################

# This file contains an overview of various configuration settings. Please consult
# the docs at https://www.elastic.co/guide/en/beats/packetbeat/current/packetbeat-configuration.html
# for more details.

# The Packetbeat shipper works by sniffing the network traffic between your
# application components. It inserts meta-data about each transaction into
# Elasticsearch.

########################### General ########################################
#
#
# https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-general.html
#

{% if 'name' in packetbeat_combined %}
# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface. Default
# is the hostname.
name: "{{ packetbeat_combined.name }}"
{% endif %}


{% if 'tags' in packetbeat_combined %}
# The tags of the shipper are included in their own field with each
# transaction published.
tags: "{{ packetbeat_combined.tags }}"
{% endif %}

{% if 'fields' in packetbeat_combined %}
# Optional fields that you can specify to add additional information to the
# output.
fields:
{% for field in packetbeat_combined.fields %}
  {{ field }}
{% endfor %}
{% endif %}

{% if 'fields_under_root' in packetbeat_combined %}
# If this option is set to true, the custom fields are stored as top-level
# fields in the output document instead of being grouped under a fields
# sub-dictionary. If the custom field names conflict with other field names,
# then the custom fields overwrite the other fields. The default value is false.
fields_under_root: "{{ packetbeat_combined.fields_under_root }}"
{% endif %}

{% if 'queue_size' in packetbeat_combined %}
# The internal queue size for single events in the processing pipeline. 
# The default value is 1000.
queue_size: {{ packetbeat_combined.queue_size }}
{% endif %}

{% if 'bulk_queue_size' in packetbeat_combined %}
# (DO NOT TOUCH) The internal queue size for bulk events in the processing
# pipeline. The default value is 0.
bulk_queue_size: {{ packetbeat_combined.bulk_queue_size }}
{% endif %}

{% if 'max_procs' in packetbeat_combined and packetbeat_combined.max_procs %}
# Sets the maximum number of CPUs that can be executing simultaneously. The
# default is the number of logical CPUs available in the system.
max_procs: {{ packetbeat_combined.max_procs }}
{% endif %}





########################### Interfaces ########################################
#
# https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-interfaces.html
#

interfaces:
  # Select the network interfaces to sniff the data. You can use the "any"
  # keyword to sniff on all connected interfaces.
  device: "{{ packetbeat_combined.interfaces.device }}"

{% if 'snaplen' in packetbeat_combined.interfaces %}
  # The maximum size of the packets to capture. The default is 65535, which is
  # large enough for almost all networks and interface types. If you sniff on a
  # physical network interface, the optimal setting is the MTU size. On virtual
  # interfaces, however, it’s safer to accept the default value.
  snaplen: {{ packetbeat_combined.interfaces.snaplen }}
{% endif %}

{% if 'type' in packetbeat_combined.interfaces %}
  # Packetbeat supports three sniffer types:
  # - pcap, which uses the libpcap library and works on most platforms, but it’s
  #   not the fastest option.
  # - af_packet, which uses memory-mapped sniffing. This option is faster than
  #   libpcap and doesn’t require a kernel module, but it’s Linux-specific.
  # - pf_ring, which makes use of an ntop.org project. This setting provides
  #   the best sniffing speed, but it requires a kernel module, and it’s Linux-specific.
  # Note
  # The pf_ring option requires re-compilation of Packetbeat and is not
  # officially supported by Elastic at this moment. The default sniffer type is pcap.
  type: "{{ packetbeat_combined.interfaces.type }}"
{% endif %}

{% if 'buffer_size_mb' in packetbeat_combined.interfaces %}
  # The maximum size of the shared memory buffer to use between the kernel and
  # user space. A bigger buffer usually results in lower CPU usage, but consumes
  # more memory. This setting is only available for the af_packet sniffer type.
  # The default is 30 MB.
  buffer_size_mb: {{ packetbeat_combined.interfaces.buffer_size_mb }}
{% endif %}

{% if 'with_vlans' in packetbeat_combined.interfaces %}
  # Packetbeat automatically generates a BPF for capturing only the traffic on
  # ports where it expects to find known protocols. For example, if you have
  # configured port 80 for HTTP and port 3306 for MySQL, Packetbeat generates
  # the following BPF filter: "port 80 or port 3306".
  #
  # However, if the traffic contains VLAN tags, the filter that Packetbeat
  # generates is ineffective because the offset is moved by four bytes. To fix
  # this, you can enable the with_vlans option, which generates a BPF filter
  # that looks like this: "port 80 or port 3306 or (vlan and (port 80 or port 3306))".
  with_vlans: "{{ packetbeat_combined.interfaces.with_vlans }}"
{% endif %}

{% if 'bpf_filter' in packetbeat_combined.interfaces %}
  # Packetbeat automatically generates a BPF for capturing only the traffic on
  # ports where it expects to find known protocols. For example, if you have
  # configured port 80 for HTTP and port 3306 for MySQL, Packetbeat generates
  # the following BPF filter: "port 80 or port 3306".
  bpf_filter: "{{ packetbeat_combined.interfaces.bpf_filter }}"
{% endif %}

{% if 'ignore_outgoing' in packetbeat_combined.interfaces %}
  # If the ignore_outgoing option is enabled, Packetbeat ignores all the
  # transactions initiated from the server running Packetbeat.
  #
  # This is useful when two Packetbeat instances publish the same transactions.
  # Because one Packetbeat sees the transaction in its outgoing queue and the
  # other sees it in its incoming queue, you can end up with duplicate
  # transactions. To remove the duplicates, you can enable the
  # packetbeat.ignore_outgoing option on one of the servers.
  ignore_outgoing: "{{ packetbeat_combined.interfaces.ignore_outgoing }}"
{% endif %}





############################# Protocols #######################################
#
# https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-protocols.html
#
{% if 'protocols' in packetbeat_combined %}
protocols:
{% if 'dns' in packetbeat_combined.protocols %}
  dns:
    # Configure the ports where to listen for DNS traffic. You can disable
    # the DNS protocol by commenting out the list of ports.
    ports: "{{ packetbeat_combined.protocols.dns.ports }}"

{% if 'include_authorities' in packetbeat_combined.protocols.dns %}
    # include_authorities controls whether or not the dns.authorities field
    # (authority resource records) is added to messages.
    # Default: false
    include_authorities: "{{ packetbeat_combined.protocols.dns.include_authorities }}"
{% endif %}

{% if 'include_additionals' in packetbeat_combined.protocols.dns %}
    # include_additionals controls whether or not the dns.additionals field
    # (additional resource records) is added to messages.
    # Default: false
    include_additionals: "{{ packetbeat_combined.protocols.dns.include_additionals }}"
{% endif %}

{% if 'send_request' in packetbeat_combined.protocols.dns %}
    # send_request and send_response control whether or not the stringified DNS
    # request and response message are added to the result.
    # Nearly all data about the request/response is available in the dns.*
    # fields, but this can be useful if you need visibility specifically
    # into the request or the response.
    # Default: false
    send_request:  "{{ packetbeat_combined.protocols.dns.send_request }}"
{% endif %}
{% if 'send_response' in packetbeat_combined.protocols.dns %}
    send_response: "{{ packetbeat_combined.protocols.dns.send_response }}"
{% endif %}
{% endif %}

{% if 'http' in packetbeat_combined.protocols %}
  http:
    # Configure the ports where to listen for HTTP traffic. You can disable
    # the HTTP protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.http.ports }}

{% if 'hide_keywords' in packetbeat_combined.protocols.http %}
    # Uncomment the following to hide certain parameters in URL or forms attached
    # to HTTP requests. The names of the parameters are case insensitive.
    # The value of the parameters will be replaced with the 'xxxxx' string.
    # This is generally useful for avoiding storing user passwords or other
    # sensitive information.
    # Only query parameters and top level form parameters are replaced.
    hide_keywords: {{ packetbeat_combined.protocols.http.hide_keywords }}
{% endif %}
{% endif %}

{% if 'memcache' in packetbeat_combined.protocols %}
  memcache:
    # Configure the ports where to listen for memcache traffic. You can disable
    # the Memcache protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.memcache.ports }}

    # Uncomment the parseunknown option to force the memcache text protocol parser
    # to accept unknown commands.
    # Note: All unknown commands MUST not contain any data parts!
    # Default: false
    parseunknown: {{ packetbeat_combined.protocols.memcache.parseunknown }}

    # Update the maxvalue option to store the values - base64 encoded - in the
    # json output.
    # possible values:
    #    maxvalue: -1  # store all values (text based protocol multi-get)
    #    maxvalue: 0   # store no values at all
    #    maxvalue: N   # store up to N values
    # Default: 0
    maxvalues: {{ packetbeat_combined.protocols.memcache.maxvalues }}

    # Use maxbytespervalue to limit the number of bytes to be copied per value element.
    # Note: Values will be base64 encoded, so actual size in json document
    #       will be 4 times maxbytespervalue.
    # Default: unlimited
    maxbytespervalue: "{{ packetbeat_combined.protocols.memcache.maxbytespervalue }}"

    # UDP transaction timeout in milliseconds.
    # Note: Quiet messages in UDP binary protocol will get response only in error case.
    #       The memcached analyzer will wait for udptransactiontimeout milliseconds
    #       before publishing quiet messages. Non quiet messages or quiet requests with
    #       error response will not have to wait for the timeout.
    # Default: 200
    udptransactiontimeout: {{ packetbeat_combined.protocols.memcache.udptransactiontimeout }}
{% endif %}

{% if 'mysql' in packetbeat_combined.protocols %}
  mysql:
    # Configure the ports where to listen for MySQL traffic. You can disable
    # the MySQL protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.mysql.ports }}
{% endif %}

{% if 'pgsql' in packetbeat_combined.protocols %}
  pgsql:
    # Configure the ports where to listen for Pgsql traffic. You can disable
    # the Pgsql protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.pgsql.ports }}
{% endif %}

{% if 'redis' in packetbeat_combined.protocols %}
  redis:
    # Configure the ports where to listen for Redis traffic. You can disable
    # the Redis protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.redis.ports }}
{% endif %}

{% if 'thrift' in packetbeat_combined.protocols %}
  thrift:
    # Configure the ports where to listen for Thrift-RPC traffic. You can disable
    # the Thrift-RPC protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.thrift.ports }}
{% endif %}

{% if 'mongodb' in packetbeat_combined.protocols %}
  mongodb:
    # Configure the ports where to listen for MongoDB traffic. You can disable
    # the MongoDB protocol by commenting out the list of ports.
    ports: {{ packetbeat_combined.protocols.mongodb.ports }}
{% endif %}

{% endif %}





############################# Processes #######################################
#
# https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-processes.html
#
{% if 'procs' in packetbeat_combined %}
# Configure the processes to be monitored and how to find them. If a process is
# monitored then Packetbeat attempts to use it's name to fill in the `proc` and
# `client_proc` fields.
# The processes can be found by searching their command line by a given string.
#
# Process matching is optional and can be enabled by uncommenting the following
# lines.
#
procs:
{% if 'enabled' in packetbeat_combined.procs %}
  enabled: {{ packetbeat_combined.procs.enabled }}
{% endif %}
  monitored:
{% for program in packetbeat_combined.procs.monitored %}
    - process: {{ program.process }}
      cmdline_grep: {{ program.cmdline_grep }}
{% endfor %}
{% endif %}





############################# Output ##########################################
#
# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
#
{% if 'output' in packetbeat_combined %}
output:

{% if 'elasticsearch' in packetbeat_combined.output %}
  # https://www.elastic.co/guide/en/beats/packetbeat/current/elasticsearch-output.html
  elasticsearch:
    # Array of hosts to connect to.
    # Scheme and port can be left out and will be set to the default (http and 9200)
    # In case you specify and additional path, the scheme is required: http://localhost:9200/path
    # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
    hosts: {{ packetbeat_combined.output.elasticsearch.hosts }}

{% if 'protocol' in packetbeat_combined.output.elasticsearch %}
    # Optional protocol and basic auth credentials.
    protocol: "{{ packetbeat_combined.output.elasticsearch.protocol }}"
    username: "{{ packetbeat_combined.output.elasticsearch.username }}"
    password: "{{ packetbeat_combined.output.elasticsearch.password }}"
{% endif %}

{% if 'worker' in packetbeat_combined.output.elasticsearch %}
    # Number of workers per Elasticsearch host.
    worker: "{{ packetbeat_combined.output.elasticsearch.worker }}"
{% endif %}

{% if 'index' in packetbeat_combined.output.elasticsearch %}
    # Optional index name. The default is "packetbeat" and generates
    # [packetbeat-]YYYY.MM.DD keys.
    index: "{{ packetbeat_combined.output.elasticsearch.worker }}"
{% endif %}

{% if 'template' in packetbeat_combined.output.elasticsearch %}
    # A template is used to set the mapping in Elasticsearch
    # By default template loading is disabled and no template is loaded.
    # These settings can be adjusted to load your own template or overwrite existing ones
    template:

      # Template name. By default the template name is packetbeat.
      name: "{{ packetbeat_combined.output.elasticsearch.template.name }}"

      # Path to template file
      path: "{{ packetbeat_combined.output.elasticsearch.template.path }}"

      # Overwrite existing template
      overwrite: "{{ packetbeat_combined.output.elasticsearch.template.overwrite }}"
{% endif %}

{% if 'path' in packetbeat_combined.output.elasticsearch %}
    # Optional HTTP Path
    path: "{{ packetbeat_combined.output.elasticsearch.path }}"
{% endif %}

{% if 'proxy_url' in packetbeat_combined.output.elasticsearch %}
    # Proxy server url
    proxy_url: "{{ packetbeat_combined.output.elasticsearch.proxy_url }}"
{% endif %}

{% if 'max_retries' in packetbeat_combined.output.elasticsearch %}
    # The number of times a particular Elasticsearch index operation is attempted. If
    # the indexing operation doesn't succeed after this many retries, the events are
    # dropped. The default is 3.
    max_retries: {{ packetbeat_combined.output.elasticsearch.max_retries }}
{% endif %}

{% if 'bulk_max_size' in packetbeat_combined.output.elasticsearch %}
    # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
    # The default is 50.
    bulk_max_size: {{ packetbeat_combined.output.elasticsearch.bulk_max_size }}
{% endif %}

{% if 'timeout' in packetbeat_combined.output.elasticsearch %}
    # Configure http request timeout before failing an request to Elasticsearch.
    timeout: {{ packetbeat_combined.output.elasticsearch.timeout }}
{% endif %}

{% if 'flush_interval' in packetbeat_combined.output.elasticsearch %}
    # The number of seconds to wait for new events between two bulk API index requests.
    # If `bulk_max_size` is reached before this interval expires, addition bulk index
    # requests are made.
    flush_interval: {{ packetbeat_combined.output.elasticsearch.flush_interval }}
{% endif %}

{% if 'save_topology' in packetbeat_combined.output.elasticsearch %}
    # Boolean that sets if the topology is kept in Elasticsearch. The default is
    # false. This option makes sense only for Packetbeat.
    save_topology: {{ packetbeat_combined.output.elasticsearch.save_topology }}
{% endif %}

{% if 'topology_expire' in packetbeat_combined.output.elasticsearch %}
    # The time to live in seconds for the topology information that is stored in
    # Elasticsearch. The default is 15 seconds.
    topology_expire: {{ packetbeat_combined.output.elasticsearch.topology_expire }}
{% endif %}

{% if 'tls' in packetbeat_combined.output.elasticsearch %}
    # tls configuration. By default is off.
    tls:
      # List of root certificates for HTTPS server verifications
      certificate_authorities: {{ packetbeat_combined.output.elasticsearch.tls.certificate_authorities }}

      # Certificate for TLS client authentication
      certificate: "{{ packetbeat_combined.output.elasticsearch.tls.certificate }}"

      # Client Certificate Key
      certificate_key: "{{ packetbeat_combined.output.elasticsearch.tls.certificate_key }}"

      # Controls whether the client verifies server certificates and host name.
      # If insecure is set to true, all server host names and certificates will be
      # accepted. In this mode TLS based connections are susceptible to
      # man-in-the-middle attacks. Use only for testing.
      insecure: {{ packetbeat_combined.output.elasticsearch.tls.insecure }}

      # Configure cipher suites to be used for TLS connections
      cipher_suites: {{ packetbeat_combined.output.elasticsearch.tls.cipher_suites }}

      # Configure curve types for ECDHE based cipher suites
      curve_types: {{ packetbeat_combined.output.elasticsearch.tls.curve_types }}

      # Configure minimum TLS version allowed for connection to logstash
      min_version: {{ packetbeat_combined.output.elasticsearch.tls.min_version }}

      # Configure maximum TLS version allowed for connection to logstash
      max_version: {{ packetbeat_combined.output.elasticsearch.tls.max_version }}
{% endif %}
{% endif %}


{% if 'logstash' in packetbeat_combined.output %}
  # https://www.elastic.co/guide/en/beats/packetbeat/current/logstash-output.html
  logstash:
    # The Logstash hosts
    hosts: {{ packetbeat_combined.output.logstash.hosts }}

{% if 'worker' in packetbeat_combined.output.logstash %}
    # Number of workers per Logstash host.
    worker: 1
{% endif %}

{% if 'bulk_max_size' in packetbeat_combined.output.logstash %}
    # The maximum number of events to bulk into a single batch window. The
    # default is 2048.
    bulk_max_size: {{ packetbeat_combined.output.logstash.bulk_max_size }}
{% endif %}

{% if 'compression_level' in packetbeat_combined.output.logstash %}
    # Set gzip compression level.
    compression_level: {{ packetbeat_combined.output.logstash.bulk_max_size }}
{% endif %}

{% if 'loadbalance' in packetbeat_combined.output.logstash %}
    # Optional load balance the events between the Logstash hosts
    loadbalance: {{ packetbeat_combined.output.logstash.loadbalance }}
{% endif %}

{% if 'index' in packetbeat_combined.output.logstash %}
    # Optional index name. The default index name depends on the each beat.
    # For Packetbeat, the default is set to packetbeat, for Topbeat
    # top topbeat and for Filebeat to filebeat.
    index: {{ packetbeat_combined.output.logstash.index }}
{% endif %}

{% if 'tls' in packetbeat_combined.output.logstash %}
    # Optional TLS. By default is off.
    tls:
      
      # List of root certificates for HTTPS server verifications
      certificate_authorities: "{{ packetbeat_combined.output.logstash.tls.certificate_authorities }}"

      # Certificate for TLS client authentication
      certificate: "{{ packetbeat_combined.output.logstash.tls.certificate }}"

      # Client Certificate Key
      certificate_key: "{{ packetbeat_combined.output.logstash.tls.certificate_key }}"

{% if 'insecure' in packetbeat_combined.output.logstash %}
      # Controls whether the client verifies server certificates and host name.
      # If insecure is set to true, all server host names and certificates will be
      # accepted. In this mode TLS based connections are susceptible to
      # man-in-the-middle attacks. Use only for testing.
      insecure: {{ packetbeat_combined.output.logstash.tls.insecure }}
{% endif %}
{% endif %}

{% if 'logstash' in packetbeat_combined.output.logstash %}
      # Configure cipher suites to be used for TLS connections
      cipher_suites: {{ packetbeat_combined.output.logstash.tls.cipher_suites }}
{% endif %}

{% if 'logstash' in packetbeat_combined.output.logstash %}
      # Configure curve types for ECDHE based cipher suites
      curve_types: {{ packetbeat_combined.output.logstash.tls.curve_types }}
{% endif %}
{% endif %}


{% if 'file' in packetbeat_combined.output %}
  ### File output
  file:
    # Path to the directory where to save the generated files. The option is mandatory.
    path: "/tmp/packetbeat"

    # Name of the generated files. The default is `packetbeat` and it generates files: `packetbeat`, `packetbeat.1`, `packetbeat.2`, etc.
    filename: packetbeat

    # Maximum size in kilobytes of each file. When this size is reached, the files are
    # rotated. The default value is 10 MB.
    rotate_every_kb: 10000

    # Maximum number of files under path. When this number of files is reached, the
    # oldest file is deleted and the rest are shifted from last to first. The default
    # is 7 files.
    number_of_files: 7
{% endif %}


{% if 'console' in packetbeat_combined.output %}
  ### Console output
  console:
    # Pretty print json event
    pretty: false
{% endif %}
{% endif %}




############################# Logging #########################################
#
# https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-logging.html
#

# There are three options for the log ouput: syslog, file, stderr.
# Under Windos systems, the log files are per default sent to the file output,
# under all other system per default to syslog.
{% if 'logging' in packetbeat_combined %}
logging:

  # Sets log level. The default log level is error.
  # Available log levels are: critical, error, warning, info, debug
  level: {{ packetbeat_combined.logging.level }}

  # Enable debug output for selected components. To enable all selectors use ["*"]
  # Other available selectors are beat, publish, service
  # Multiple selectors can be chained.
  selectors: {{ packetbeat_combined.logging.selectors }}

  # Send all logging output to syslog. On Windows default is false, otherwise
  # default is true.
  to_syslog: {{ packetbeat_combined.logging.to_syslog }}

  # Write all logging output to files. Beats automatically rotate files if rotateeverybytes
  # limit is reached.
  to_files: {{ packetbeat_combined.logging.to_files }}
  
  # To enable logging to files, to_files option has to be set to true
{% if 'files' in packetbeat_combined.logging %}
  files:
    # The directory where the log files will written to.
    path: "{{ packetbeat_combined.logging.files.path }}"

    # The name of the files where the logs are written to.
    name: "{{ packetbeat_combined.logging.files.name }}"

    # Configure log file size limit. If limit is reached, log file will be
    # automatically rotated
    rotateverybytes: {{ packetbeat_combined.logging.files.rotateeverybytes }}

    # Number of rotated log files to keep. Oldest files will be deleted first.
    keepfiles: {{ packetbeat_combined.logging.files.keepfiles }}
{% endif %}

  # Enable metrics recording
{% if 'metrics' in packetbeat_combined.logging %}
  metrics:
    enabled: {{ packetbeat_combined.logging.metrics.enabled }}
    period: {{ packetbeat_combined.logging.metrics.period }}
{% endif %}
{% endif %}
